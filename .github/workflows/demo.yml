name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      # Has an after hook that checks for changes to ~/.npm and caches it
      - name: Cache dependencies setup
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      js-file-path: ${{ steps.js-file-path.outputs.js-file-path }}
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependencies setup
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build

      - name: Set js-file-path output
        # Assign js-file-path to the first JS file in dist/assets
        run: echo "js-file-path=$(find dist/assets -name '*.js' | head -n 1)" >> $GITHUB_OUTPUT
        id: js-file-path

      # Store the build directory as an artifact
      - name: Log js-file-path
        run: echo ${{ steps.js-file-path.outputs.js-file-path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Output stored js-file-path in another workflow
        run: echo ${{ needs.build.outputs.js-file-path }}
